@model NetflixClone.Models.user

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create</title>
    <link rel="stylesheet" href="~/Content/LandingPage_SignUp/style.css">
    <link rel="shortcut icon" href="https://www.netflix.com/in/favicon.ico" type="image/x-icon">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
</head>

<body>
    <div class="banner">
        <a href="@Url.Action("Index", "Login")">
            <img class="netflix" src="~/Content/LandingPage_SignUp/logoNetflix.png" alt="Netflix Logo">
        </a>
    </div>
    <div id="video-container">
        <video id="background-video" autoplay muted>
            <source src="~/Content/LandingPage_SignUp/Netflix.mp4" type="video/mp4">
        </video>
    </div>
    <main>
        <div id="netflix-logo">
            <img src="~/Content/LandingPage_SignUp//images/Netflix_Logo_PMS.png">
        </div>

        <div id="content">
            <div class="pics">
                <div class="wrapper">
                    @using (Html.BeginForm("Create", "Signup", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="input-box" id="input1">
                            @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="input-box" id="input1">
                            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="input-box" id="input1">
                            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="submit" class="btn">Create</button>
                            </div>
                        </div>
                        if (ViewBag.Error != null)
                        {
                            <div class="alert alert-danger">
                                <p>An error occurred: @ViewBag.Error</p>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </main>

    <footer>
        <!-- Footer content -->
    </footer>

    <script>
        var LoadFile = function (event) {
            var image = document.getElementById('output');
            image.src = URL.createObjectURL(event.target.files[0]);
        }
    </script>
</body>

</html>
